<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring02.mapper.UserMapper">
	<!-- 매퍼의 namespace는 매퍼 인터페이스의 패키지/인터페이스 이름과 같게. -->


	<!-- com.example.spring02.mapper.PostMapper 인터페이스의 selectOrderByIdDesc() 
	메서드가 사용하게될 SQL문장. 인터페이스의 패키지/인터페이스 이름과 같게.-->
	<select id="selectOrderByIdDesc" resultType="com.example.spring02.domain.User">
		select * from USERS order by ID desc
	</select>
	
	<insert id="insert">
		insert into USERS (USERNAME, PASSWORD, EMAIL)
		values (#{username}, #{password}, #{email}) <!-- #{} 변수를 의미 -->
	</insert>
	<select id="selectById" resultType="com.example.spring02.domain.User">
		select * from USERS
		where ID = #{id}
	</select>
	
	<update id="updateTitleAndContentById">
		update USERS
		set USERNAME = #{username}, PASSWORD = #{password}, EMAIL = #{email}
		where ID = #{id}
	</update>
	
	<delete id="deleteById">
		delete from USERS where ID = #{id}
	</delete>
	
	<select id="selectByKeywordOrderByIdDesc" resultType="com.example.spring02.domain.User">
		select * from USERS
		where 
		<if test="type == 'u'.toString()" >
			lower(USERNAME) like #{keyword}
		</if>
		<if test="type == 'e'.toString()" >
			lower(EMAIL) like #{keyword}
		</if>
		<if test="type == 'p'.toString()" >
			lower(POINTS) like #{keyword}
		</if>
		order by ID desc
	</select>
	
	<select id="selectByUserNameAndPassword" resultType="com.example.spring02.domain.User">
		select * from USERS
		where USERNAME = #{username}, and PASSWORD = #{password}
	</select>
	
</mapper>