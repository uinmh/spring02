<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- bean definitions here -->
	
	<!-- HikariConfig bean -->
	<!--bean(스프링에서 생성하고 관리하는 객체) definitions here -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
		<property name="dataSourceProperties">
			<props>
				<prop key="cachePrepStmt">true</prop>
				<prop key="prepStmtCachSize">250</prop>
				<prop key="prepStmtCacheLimit">2048</prop>
			</props>
		</property>
	</bean>
	<!-- HikariDataSource bean (Connection Pool) -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close"> <!--  만약 데이터 소스가 종료될때 close()호출 -->
		<constructor-arg ref="hikariConfig"/>
	</bean>
	
	<!-- SqlSessionFactoryBean:
	Data Source (Connection pool)을 사용해서 sql문장들을 실행하고 결고처리를 수행하는 객체.
	-->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/mapper/**/*.xml" />
	</bean>
	
	<!-- MyBatis에서 사용하는 컴포넌트들이 있는 패키지 검색
	 SqlSessionFactoryBean에서 사용할 매퍼 인터페이스. -->
	 
	<mybatis:scan base-package="com.example.spring02.mapper" />
	
	<!-- Service Component들이 정의된 페이지를 스캔해서 bean을 생성 -->
	<context:component-scan base-package="com.example.spring02.service" />
</beans>