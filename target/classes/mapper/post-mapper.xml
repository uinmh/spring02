<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring02.mapper.PostMapper">
	<!-- 매퍼의 namespace는 매퍼 인터페이스의 패키지/인터페이스 이름과 같게. -->


	<!-- com.example.spring02.mapper.PostMapper 인터페이스의 selectOrderByIdDesc() 
	메서드가 사용하게될 SQL문장. 인터페이스의 패키지/인터페이스 이름과 같게.-->
	<select id="selectOrderByIdDesc" resultType="com.example.spring02.domain.Post">
		select * from POSTS order by ID desc
	</select>
	
	<insert id="insert">
		insert into POSTS (TITLE, CONTENT, AUTHOR, CREATED_TIME, MODIFIED_TIME)
		values (#{title}, #{content}, #{author}, sysdate, sysdate) <!-- #{} 변수를 의미 -->
	</insert>
	<select id="selectById" resultType="com.example.spring02.domain.Post">
		select * from POSTS
		where ID = #{id}
	</select>
	
	<update id="updateTitleAndContentById">
		update POSTS 
		set TITLE = #{title}, CONTENT = #{content}, MODIFIED_TIME = sysdate
		where ID = #{id}
	</update>
	
	<delete id="deleteById">
		delete from POSTS where ID = #{id}
	</delete>
	
	<select id="selectByKeywordOrderByIdDesc" resultType="com.example.spring02.domain.Post">
		select * from POSTS
		where 
		<if test="type == 't'.toString()" >
			lower(TITLE) like #{keyword}
		</if>
		<if test="type == 'c'.toString()" >
			lower(CONTENT) like #{keyword}
		</if>
		<if test="type == 'tc'.toString()" >
			lower(TITLE) like #{keyword}
			or
			lower(CONTENT) like #{keyword}
		</if>
		<if test="type == 'a'.toString()" >
			lower(AUTHOR) like #{keyword}
		</if>
		order by ID desc
	</select>
	
</mapper>